name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  merge-to-main:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # To fetch all tags

      - name: Merge test to main
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check if main branch exists, create it if not
          if git ls-remote --heads origin main | grep main; then
            echo "Branch main exists, checking out"
            git checkout main
          else
            echo "Branch main does not exist, creating it"
            git checkout -b main
          fi
          
          git merge test
          git push origin main

      - name: Create new tag
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          # Extract version components
          MAJOR=$(echo $LATEST_TAG | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\1/')
          MINOR=$(echo $LATEST_TAG | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\2/')
          PATCH=$(echo $LATEST_TAG | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\3/')
          
          # Increment patch version
          PATCH=$((PATCH + 1))
          
          # Create new tag
          NEW_TAG="v0.$MINOR.$PATCH"
          git tag -a "$NEW_TAG" -m "New release $NEW_TAG"
          git push origin --tags
