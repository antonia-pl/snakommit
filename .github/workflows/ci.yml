name: CI

on:
  push:
    branches:
      - dev

jobs:
  merge-to-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge dev to test
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check if test branch exists, create it if not
          if git ls-remote --heads origin test | grep test; then
            echo "Branch test exists, checking out"
            git checkout test
          else
            echo "Branch test does not exist, creating it"
            git checkout -b test
          fi
          
          # Try to merge, if conflict occurs use strategy to favor dev branch changes
          if ! git merge dev --no-commit; then
            echo "Merge conflict detected, resolving in favor of dev branch changes"
            git checkout --ours .
            git add .
          fi
          
          # Commit the merge and push
          git commit -m "Merge dev into test" || echo "No changes to commit"
          git push origin test

  run-tests:
    runs-on: ubuntu-latest
    needs: merge-to-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: test

      - name: Set up Ruby (auto-detect from .ruby-version or Gemfile)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Rake tasks
        run: |
          rake -T
          rake test